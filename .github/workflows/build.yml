name: Latam Cashier Dev CI/CD
on:
  push:
    branches: [ "fiter/latam/dev" ]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: kamiazya/setup-graphviz@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_united_cap }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_united_cap }}
          aws-region: us-east-2

      - id: commit
        uses: pr-mpt/actions-commit-hash@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: latam webapp
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  continuous-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LATAM_REMOTE_HOST }}
          username: ${{ secrets.LATAM_REMOTE_USER }}
          key: ${{ secrets.LATAM_EC2_SSH_KEY }}
          script: |
            docker pull 916148231619.dkr.ecr.us-east-2.amazonaws.com/latam frontend:$IMAGE_TAG
            docker run -p 80:80 -d latam-webapp:${{ env.IMAGE_TAG }}
